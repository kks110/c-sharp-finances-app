@page "/static-expenses"
@inject IJSRuntime JSRuntime

@using Finances.Models
<h1>Static Expenses</h1>

<AddExpense 
    RefreshPage="Refresh"
    Variable="false"
/> 

@if (AllExpenses().Count > 0)
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Name</th>
            <th>Amount</th>
            <th>Notes</th>
            <th />
            <th />
        </tr>
        </thead>
        <tbody>
        @foreach (var expense in AllExpenses())
        {
            <tr>
                <td>@expense.Name</td>
                <td>£@expense.CalculateMonthlyAmount()</td>
                <td>@expense.Notes</td>
                <td>
                    <EditExpense 
                        TItem="Expense"
                        ExpenseItem="@expense" 
                        RefreshPage="Refresh" 
                    />
                </td>
                <td>
                    <DeleteConfirmation  
                        TItem="Expense"
                        Item="@expense"
                        ItemDeletion="deleteExpense"
                        Message="@deleteMessage(expense)"
                    />
                </td>
            </tr>
        }
        <tr class="table-danger">
            <th>Total:</th>
            <th>£@TotalExpenses()</th>
            <th />
            <th />
            <th />
        </tr>
        </tbody>
    </table>
}



@code {
    [SupplyParameterFromForm]
    private Expense? ExpenseModel { get; set; }
    
    protected override void OnInitialized() => ExpenseModel ??= new();
    
    private bool showEditForm = false;

    private List<Expense> AllExpenses()
    {
        return App.ExpenseRepo.GetAllStaticExpenses();
    }
    
    private int TotalExpenses()
    {
        return AllExpenses().Sum(expense => expense.CalculateMonthlyAmount());
    }
    

    private async Task Refresh()
    {
        StateHasChanged();
    }
    
    private void deleteExpense(Expense expense)
    {
        App.ExpenseRepo.DeleteExpense(expense.Id);
    }
    
    private string deleteMessage(Expense expense)
    {
        string weeklyExtra = expense.Weekly ? "(£" + expense.Amount + " per week)" : "";
        return $"{expense.Name}: £{expense.CalculateMonthlyAmount()} {weeklyExtra}";
    }
}
